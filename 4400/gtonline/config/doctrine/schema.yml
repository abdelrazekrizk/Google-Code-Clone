Account:
  columns:
    id: { type: integer, primary: true, autoincrement: true }
    email: { type: string(255), notnull: true, unique: true }
    password: { type: string(255), notnull: true }
    firstname: { type: string(255), notnull: true }
    lastname: { type: string(255), notnull: true }
    isAdmin: { type: boolean, notnull: true }

User:
  columns:
    id: { type: integer, primary: true, autoincrement: true }
    accountId: { type: integer, notnull: true }
    sex: { type: integer, notnull: true }
    birthday: { type: date, notnull: true }
    currentcity: { type: string(255) }
    hometown: { type: string(255) }
  relations:
    Account:
      class: Account 
      local: accountId 
      foreign: id

UserInterest:
  columns:
    id: { type: integer, primary: true, autoincrement: true }
    userId: { type: integer, notnull: true }
    description: { type: string(255), notnull: true }
  relations:
    User:
      class: User
      local: userId
      foreign: id

UserSchool:
  columns:
    id: { type: integer, primary: true, autoincrement: true }
    userId: { type: integer, notnull: true }
    schoolId: { type: integer, notnull: true }
    graduationYear: { type: integer, notnull: true } # by convention lets not allow this to be null. set -1 to be "not yet graduated" status.
  relations:
    User:
      class: User
      local: userId
      foreign: id
    School:
      class: School
      local: schoolId
      foreign: id
  indexes:
    uniqueness:
      fields: [userId, schoolId, graduationYear]
      type: unique

UserEmployer:
  columns:
    id: { type: integer, primary: true, autoincrement: true }
    userId: { type: integer, notnull: true }
    employerId: { type: integer, notnull: true }
    jobTitle: { type: string(255), notnull: true }
  relations:
    User:
      class: User
      local: userId
      foreign: id
    Employer:
      class: Employer
      local: employerId
      foreign: id
  indexes:
    uniqueness:
      fields: [ userId, employerId, jobTitle ]

Administrator:
  columns:
    id: { type: integer, primary: true, autoincrement: true }
    accountId: { type: integer, notnull: true }
    lastLogin: { type: datetime, notnull: true }
  relations:
    Account:
      class: Account 
      local: accountId 
      foreign: id

Relationship:
  columns:
    sourceUserId: { type: integer, primary: true }
    destinationUserId: { type: integer, primary: true }
    description: { type: string(255) }
    acceptTime: { type: date } # This field will be null until accepted. once accepted, it should never be null.
    status: { type: integer, notnull: true } # 0: pending 1: accepted 2: rejected 3: cancelled
  relations:
    SourceUser: 
      class: User
      local: sourceUserId
      foreign: id
    DestinationUser:
      class: User
      local: destinationUserId
      foreign: id

StatusUpdate:
  columns:
    id: { type: integer, primary: true, autoincrement: true }
    userId: { type: integer, notnull: true }
    created_at: { type: datetime, notnull: true }
    text: { type: string(512), notnull: true }
  relations:
    User:
      class: User
      local: userId
      foreign: id

StatusUpdateComment:
  columns:
    id: { type: integer, primary: true, autoincrement: true }
    statusUpdateId: { type: integer, notnull: true }
    created_at: { type: datetime, notnull: true }
    text: { type: string(512), notnull: true }
    userId: { type: integer, notnull: true }
  relations:
    User:
      class: User
      local: userId
      foreign: id
    StatusUpdate:
      class: StatusUpdate
      local: statusUpdateId
      foreign: id

School:
  columns:
    id: { type: integer, primary: true, autoincrement: true }
    name: { type: string(255), unique: true, notnull: true }
    school_type_id: { type: integer, notnull: true }
  relations:
    SchoolType:
      class: SchoolType
      local: school_type_id
      foreign: id

SchoolType:
  columns:
    id: { type: integer, primary: true, autoincrement: true }
    name: { type: string(255), unique: true, notnull: true }
# initialize as "College/University", "High School", "Middle School", "Elementary School"

Employer:
  columns:
    id: { type: integer, primary: true, autoincrement: true }
    name: { type: string(255), unique: true, notnull: true }
