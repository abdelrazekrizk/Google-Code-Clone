<?php

/**
 * BaseUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $accountId
 * @property integer $sex
 * @property date $birthday
 * @property string $currentcity
 * @property string $hometown
 * @property Account $Account
 * @property Doctrine_Collection $UserInterest
 * @property Doctrine_Collection $UserSchool
 * @property Doctrine_Collection $UserEmployer
 * @property Doctrine_Collection $Relationship
 * @property Doctrine_Collection $StatusUpdate
 * @property Doctrine_Collection $StatusUpdateComment
 * 
 * @method integer             getId()                  Returns the current record's "id" value
 * @method integer             getAccountId()           Returns the current record's "accountId" value
 * @method integer             getSex()                 Returns the current record's "sex" value
 * @method date                getBirthday()            Returns the current record's "birthday" value
 * @method string              getCurrentcity()         Returns the current record's "currentcity" value
 * @method string              getHometown()            Returns the current record's "hometown" value
 * @method Account             getAccount()             Returns the current record's "Account" value
 * @method Doctrine_Collection getUserInterest()        Returns the current record's "UserInterest" collection
 * @method Doctrine_Collection getUserSchool()          Returns the current record's "UserSchool" collection
 * @method Doctrine_Collection getUserEmployer()        Returns the current record's "UserEmployer" collection
 * @method Doctrine_Collection getRelationship()        Returns the current record's "Relationship" collection
 * @method Doctrine_Collection getStatusUpdate()        Returns the current record's "StatusUpdate" collection
 * @method Doctrine_Collection getStatusUpdateComment() Returns the current record's "StatusUpdateComment" collection
 * @method User                setId()                  Sets the current record's "id" value
 * @method User                setAccountId()           Sets the current record's "accountId" value
 * @method User                setSex()                 Sets the current record's "sex" value
 * @method User                setBirthday()            Sets the current record's "birthday" value
 * @method User                setCurrentcity()         Sets the current record's "currentcity" value
 * @method User                setHometown()            Sets the current record's "hometown" value
 * @method User                setAccount()             Sets the current record's "Account" value
 * @method User                setUserInterest()        Sets the current record's "UserInterest" collection
 * @method User                setUserSchool()          Sets the current record's "UserSchool" collection
 * @method User                setUserEmployer()        Sets the current record's "UserEmployer" collection
 * @method User                setRelationship()        Sets the current record's "Relationship" collection
 * @method User                setStatusUpdate()        Sets the current record's "StatusUpdate" collection
 * @method User                setStatusUpdateComment() Sets the current record's "StatusUpdateComment" collection
 * 
 * @package    gtonline
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUser extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('user');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('accountId', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('sex', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('birthday', 'date', null, array(
             'type' => 'date',
             'notnull' => true,
             ));
        $this->hasColumn('currentcity', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('hometown', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Account', array(
             'local' => 'accountId',
             'foreign' => 'id'));

        $this->hasMany('UserInterest', array(
             'local' => 'id',
             'foreign' => 'userId'));

        $this->hasMany('UserSchool', array(
             'local' => 'id',
             'foreign' => 'userId'));

        $this->hasMany('UserEmployer', array(
             'local' => 'id',
             'foreign' => 'userId'));

        $this->hasMany('Relationship', array(
             'local' => 'id',
             'foreign' => 'sourceUserId'));

        $this->hasMany('StatusUpdate', array(
             'local' => 'id',
             'foreign' => 'userId'));

        $this->hasMany('StatusUpdateComment', array(
             'local' => 'id',
             'foreign' => 'userId'));
    }
}